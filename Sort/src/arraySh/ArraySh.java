package arraySh;

/**
 * Сортировка Шелла
 * @author Oleg Belov
 * @since 08.08.2016
 *
 */

public class ArraySh {
	private long[] theArray; // Ссылка на массив
	private int nElems; // Количество элементов
	 
	public ArraySh(int max) {
		theArray = new long[max]; // Создание массива
		nElems = 0; // Пока нет ни одного элемента
	}

	/**
	 * Вставка элемента в массив
	 * @param value значение элемента
	 */
	public void insert(long value) {
		theArray[nElems] = value; // Собственно вставка
		nElems++; // Увеличение размера
	}

	/**
	 * Вывод содержимого массива
	 */
	public void display() {
		System.out.print("A=");
		for(int j=0; j<nElems; j++) // Для каждого элемента
			System.out.print(theArray[j] + " "); // Вывод
		System.out.println("");
	}


	public void shellSort() {
		int inner, outer;
		long temp;
		int h = 1; // Вычисление исходного значения h
		while(h <= nElems/3)
			h = h*3 + 1; // (1, 4, 13, 40, 121, ...)
		// Последовательное уменьшение h до 1
		while(h>0) {
			// h-сортировка файла
			for(outer=h; outer<nElems; outer++) {
				temp = theArray[outer];
				inner = outer;
				// Первый подмассив (0, 4, 8)
				while(inner > h-1 && theArray[inner-h] >= temp) {
					theArray[inner] = theArray[inner-h];
					inner -= h;
				}
				theArray[inner] = temp;
			}
			h = (h-1) / 3; // Уменьшение h
		}
	}

}
